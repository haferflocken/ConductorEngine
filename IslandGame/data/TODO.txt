Amp/Conductor TODO:
[ ] Code-driven declarative UI creation functions for debug UI
	[ ] Formatted text display
	[ ] Hierarchical panes
	[ ] Mouse input support
	[ ] Buttons
	[ ] Scroll panes
	[ ] Keyboard input support
	[ ] Text boxes
	
[ ] Use UnboundedScene as a level format.
	[x] New component & system that loads chunks around it: Scene::AnchorComponent
	[x] Test scene of a camera and a mesh
	[x] Binary chunk format
	[ ] Basic level editor

[ ] Input
	[ ] Set InputComponent ClientID so that transmission works
	[ ] Save/load default input mapping and user input mapping
	[ ] Mouse wheel input

[ ] Entity hierarchy: Allow entities to be attached to each other.
	[x] Add a parent/child relationship to entities and allow components/systems to use this
	[x] Make SceneTransformComponent aware of parent/child relationships
	[x] Make UnboundedScene and the chunk system aware of parent/child relationships
	[x] Make chunks preserve entity IDs. This is required so that parent/child relationships are correctly preserved
	[ ] Thoroughly test

[ ] Meshes
	[ ] Decide on a mesh format. Needs to support triangles, UVs, rigs, vertex weights
	[x] Load static meshes
	[ ] Rigged meshes
		[ ] Load meshes with rigging
		[ ] Animate meshes with rigging. Bones are entities so that other entities can easily attach to them.

Renderer TODO:
[ ] Shader program loading and rendering
[ ] Texture loading and rendering
[ ] Render rigged meshes

IslandGame TODO:

DONE:
[x] LinearBlockAllocator must respect alignment of each element in a block

[x] Move meshes from Renderer to Conductor
	Meshes have rigs & collision geo that cannot be isolated into the renderer.
	Components must be moved; systems that render remain in the renderer.
	[x] Decouple bgfx data from mesh component so Conductor doesn't depend on it
		[x] EntityManager must track components added and removed per frame
			Can track either by component type or entity ID. Systems should only be informed of components
			added and removed on entities that they match.
			This will make it easier for systems to store data about their components outside of their components.
		[x] Store bgfx data in Renderer::MeshSystem rather than in MeshComponent
